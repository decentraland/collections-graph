// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OrderCreated extends ethereum.Event {
  get params(): OrderCreated__Params {
    return new OrderCreated__Params(this);
  }
}

export class OrderCreated__Params {
  _event: OrderCreated;

  constructor(event: OrderCreated) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get priceInWei(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get expiresAt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OrderSuccessful extends ethereum.Event {
  get params(): OrderSuccessful__Params {
    return new OrderSuccessful__Params(this);
  }
}

export class OrderSuccessful__Params {
  _event: OrderSuccessful;

  constructor(event: OrderSuccessful) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get totalPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class OrderCancelled extends ethereum.Event {
  get params(): OrderCancelled__Params {
    return new OrderCancelled__Params(this);
  }
}

export class OrderCancelled__Params {
  _event: OrderCancelled;

  constructor(event: OrderCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ChangedPublicationFee extends ethereum.Event {
  get params(): ChangedPublicationFee__Params {
    return new ChangedPublicationFee__Params(this);
  }
}

export class ChangedPublicationFee__Params {
  _event: ChangedPublicationFee;

  constructor(event: ChangedPublicationFee) {
    this._event = event;
  }

  get publicationFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangedOwnerCutPerMillion extends ethereum.Event {
  get params(): ChangedOwnerCutPerMillion__Params {
    return new ChangedOwnerCutPerMillion__Params(this);
  }
}

export class ChangedOwnerCutPerMillion__Params {
  _event: ChangedOwnerCutPerMillion;

  constructor(event: ChangedOwnerCutPerMillion) {
    this._event = event;
  }

  get ownerCutPerMillion(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeLegacyNFTAddress extends ethereum.Event {
  get params(): ChangeLegacyNFTAddress__Params {
    return new ChangeLegacyNFTAddress__Params(this);
  }
}

export class ChangeLegacyNFTAddress__Params {
  _event: ChangeLegacyNFTAddress;

  constructor(event: ChangeLegacyNFTAddress) {
    this._event = event;
  }

  get legacyNFTAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AuctionCreated extends ethereum.Event {
  get params(): AuctionCreated__Params {
    return new AuctionCreated__Params(this);
  }
}

export class AuctionCreated__Params {
  _event: AuctionCreated;

  constructor(event: AuctionCreated) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get priceInWei(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get expiresAt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AuctionSuccessful extends ethereum.Event {
  get params(): AuctionSuccessful__Params {
    return new AuctionSuccessful__Params(this);
  }
}

export class AuctionSuccessful__Params {
  _event: AuctionSuccessful;

  constructor(event: AuctionSuccessful) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get totalPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class AuctionCancelled extends ethereum.Event {
  get params(): AuctionCancelled__Params {
    return new AuctionCancelled__Params(this);
  }
}

export class AuctionCancelled__Params {
  _event: AuctionCancelled;

  constructor(event: AuctionCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Pause extends ethereum.Event {
  get params(): Pause__Params {
    return new Pause__Params(this);
  }
}

export class Pause__Params {
  _event: Pause;

  constructor(event: Pause) {
    this._event = event;
  }
}

export class Unpause extends ethereum.Event {
  get params(): Unpause__Params {
    return new Unpause__Params(this);
  }
}

export class Unpause__Params {
  _event: Unpause;

  constructor(event: Unpause) {
    this._event = event;
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Migrated extends ethereum.Event {
  get params(): Migrated__Params {
    return new Migrated__Params(this);
  }
}

export class Migrated__Params {
  _event: Migrated;

  constructor(event: Migrated) {
    this._event = event;
  }

  get contractName(): string {
    return this._event.parameters[0].value.toString();
  }

  get migrationId(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Marketplace__auctionByAssetIdResult {
  value0: Bytes;
  value1: Address;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Bytes, value1: Address, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getValue0(): Bytes {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }
}

export class Marketplace__orderByAssetIdResult {
  value0: Bytes;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Bytes,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getSeller(): Address {
    return this.value1;
  }

  getNftAddress(): Address {
    return this.value2;
  }

  getPrice(): BigInt {
    return this.value3;
  }

  getExpiresAt(): BigInt {
    return this.value4;
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  ERC721_Interface(): Bytes {
    let result = super.call(
      "ERC721_Interface",
      "ERC721_Interface():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_ERC721_Interface(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ERC721_Interface",
      "ERC721_Interface():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  InterfaceId_ValidateFingerprint(): Bytes {
    let result = super.call(
      "InterfaceId_ValidateFingerprint",
      "InterfaceId_ValidateFingerprint():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_InterfaceId_ValidateFingerprint(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "InterfaceId_ValidateFingerprint",
      "InterfaceId_ValidateFingerprint():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  acceptedToken(): Address {
    let result = super.call("acceptedToken", "acceptedToken():(address)", []);

    return result[0].toAddress();
  }

  try_acceptedToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "acceptedToken",
      "acceptedToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerCutPerMillion(): BigInt {
    let result = super.call(
      "ownerCutPerMillion",
      "ownerCutPerMillion():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ownerCutPerMillion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerCutPerMillion",
      "ownerCutPerMillion():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  publicationFeeInWei(): BigInt {
    let result = super.call(
      "publicationFeeInWei",
      "publicationFeeInWei():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_publicationFeeInWei(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "publicationFeeInWei",
      "publicationFeeInWei():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isMigrated(contractName: string, migrationId: string): boolean {
    let result = super.call("isMigrated", "isMigrated(string,string):(bool)", [
      ethereum.Value.fromString(contractName),
      ethereum.Value.fromString(migrationId)
    ]);

    return result[0].toBoolean();
  }

  try_isMigrated(
    contractName: string,
    migrationId: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isMigrated",
      "isMigrated(string,string):(bool)",
      [
        ethereum.Value.fromString(contractName),
        ethereum.Value.fromString(migrationId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  legacyNFTAddress(): Address {
    let result = super.call(
      "legacyNFTAddress",
      "legacyNFTAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_legacyNFTAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "legacyNFTAddress",
      "legacyNFTAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  auctionByAssetId(assetId: BigInt): Marketplace__auctionByAssetIdResult {
    let result = super.call(
      "auctionByAssetId",
      "auctionByAssetId(uint256):(bytes32,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(assetId)]
    );

    return new Marketplace__auctionByAssetIdResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_auctionByAssetId(
    assetId: BigInt
  ): ethereum.CallResult<Marketplace__auctionByAssetIdResult> {
    let result = super.tryCall(
      "auctionByAssetId",
      "auctionByAssetId(uint256):(bytes32,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(assetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__auctionByAssetIdResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  orderByAssetId(
    param0: Address,
    param1: BigInt
  ): Marketplace__orderByAssetIdResult {
    let result = super.call(
      "orderByAssetId",
      "orderByAssetId(address,uint256):(bytes32,address,address,uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Marketplace__orderByAssetIdResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_orderByAssetId(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Marketplace__orderByAssetIdResult> {
    let result = super.tryCall(
      "orderByAssetId",
      "orderByAssetId(address,uint256):(bytes32,address,address,uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__orderByAssetIdResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }
}

export class SetOwnerCutPerMillionCall extends ethereum.Call {
  get inputs(): SetOwnerCutPerMillionCall__Inputs {
    return new SetOwnerCutPerMillionCall__Inputs(this);
  }

  get outputs(): SetOwnerCutPerMillionCall__Outputs {
    return new SetOwnerCutPerMillionCall__Outputs(this);
  }
}

export class SetOwnerCutPerMillionCall__Inputs {
  _call: SetOwnerCutPerMillionCall;

  constructor(call: SetOwnerCutPerMillionCall) {
    this._call = call;
  }

  get _ownerCutPerMillion(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetOwnerCutPerMillionCall__Outputs {
  _call: SetOwnerCutPerMillionCall;

  constructor(call: SetOwnerCutPerMillionCall) {
    this._call = call;
  }
}

export class SetLegacyNFTAddressCall extends ethereum.Call {
  get inputs(): SetLegacyNFTAddressCall__Inputs {
    return new SetLegacyNFTAddressCall__Inputs(this);
  }

  get outputs(): SetLegacyNFTAddressCall__Outputs {
    return new SetLegacyNFTAddressCall__Outputs(this);
  }
}

export class SetLegacyNFTAddressCall__Inputs {
  _call: SetLegacyNFTAddressCall;

  constructor(call: SetLegacyNFTAddressCall) {
    this._call = call;
  }

  get _legacyNFTAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetLegacyNFTAddressCall__Outputs {
  _call: SetLegacyNFTAddressCall;

  constructor(call: SetLegacyNFTAddressCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get assetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CancelOrder1Call extends ethereum.Call {
  get inputs(): CancelOrder1Call__Inputs {
    return new CancelOrder1Call__Inputs(this);
  }

  get outputs(): CancelOrder1Call__Outputs {
    return new CancelOrder1Call__Outputs(this);
  }
}

export class CancelOrder1Call__Inputs {
  _call: CancelOrder1Call;

  constructor(call: CancelOrder1Call) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get assetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelOrder1Call__Outputs {
  _call: CancelOrder1Call;

  constructor(call: CancelOrder1Call) {
    this._call = call;
  }
}

export class CreateOrderCall extends ethereum.Call {
  get inputs(): CreateOrderCall__Inputs {
    return new CreateOrderCall__Inputs(this);
  }

  get outputs(): CreateOrderCall__Outputs {
    return new CreateOrderCall__Outputs(this);
  }
}

export class CreateOrderCall__Inputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get assetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get priceInWei(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get expiresAt(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateOrderCall__Outputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class SafeExecuteOrderCall extends ethereum.Call {
  get inputs(): SafeExecuteOrderCall__Inputs {
    return new SafeExecuteOrderCall__Inputs(this);
  }

  get outputs(): SafeExecuteOrderCall__Outputs {
    return new SafeExecuteOrderCall__Outputs(this);
  }
}

export class SafeExecuteOrderCall__Inputs {
  _call: SafeExecuteOrderCall;

  constructor(call: SafeExecuteOrderCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get assetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fingerprint(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeExecuteOrderCall__Outputs {
  _call: SafeExecuteOrderCall;

  constructor(call: SafeExecuteOrderCall) {
    this._call = call;
  }
}

export class CreateOrder1Call extends ethereum.Call {
  get inputs(): CreateOrder1Call__Inputs {
    return new CreateOrder1Call__Inputs(this);
  }

  get outputs(): CreateOrder1Call__Outputs {
    return new CreateOrder1Call__Outputs(this);
  }
}

export class CreateOrder1Call__Inputs {
  _call: CreateOrder1Call;

  constructor(call: CreateOrder1Call) {
    this._call = call;
  }

  get assetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceInWei(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get expiresAt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateOrder1Call__Outputs {
  _call: CreateOrder1Call;

  constructor(call: CreateOrder1Call) {
    this._call = call;
  }
}

export class ExecuteOrderCall extends ethereum.Call {
  get inputs(): ExecuteOrderCall__Inputs {
    return new ExecuteOrderCall__Inputs(this);
  }

  get outputs(): ExecuteOrderCall__Outputs {
    return new ExecuteOrderCall__Outputs(this);
  }
}

export class ExecuteOrderCall__Inputs {
  _call: ExecuteOrderCall;

  constructor(call: ExecuteOrderCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get assetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExecuteOrderCall__Outputs {
  _call: ExecuteOrderCall;

  constructor(call: ExecuteOrderCall) {
    this._call = call;
  }
}

export class SetPublicationFeeCall extends ethereum.Call {
  get inputs(): SetPublicationFeeCall__Inputs {
    return new SetPublicationFeeCall__Inputs(this);
  }

  get outputs(): SetPublicationFeeCall__Outputs {
    return new SetPublicationFeeCall__Outputs(this);
  }
}

export class SetPublicationFeeCall__Inputs {
  _call: SetPublicationFeeCall;

  constructor(call: SetPublicationFeeCall) {
    this._call = call;
  }

  get _publicationFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPublicationFeeCall__Outputs {
  _call: SetPublicationFeeCall;

  constructor(call: SetPublicationFeeCall) {
    this._call = call;
  }
}

export class Initialize1Call extends ethereum.Call {
  get inputs(): Initialize1Call__Inputs {
    return new Initialize1Call__Inputs(this);
  }

  get outputs(): Initialize1Call__Outputs {
    return new Initialize1Call__Outputs(this);
  }
}

export class Initialize1Call__Inputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }

  get _acceptedToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _legacyNFTAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class Initialize1Call__Outputs {
  _call: Initialize1Call;

  constructor(call: Initialize1Call) {
    this._call = call;
  }
}

export class Initialize2Call extends ethereum.Call {
  get inputs(): Initialize2Call__Inputs {
    return new Initialize2Call__Inputs(this);
  }

  get outputs(): Initialize2Call__Outputs {
    return new Initialize2Call__Outputs(this);
  }
}

export class Initialize2Call__Inputs {
  _call: Initialize2Call;

  constructor(call: Initialize2Call) {
    this._call = call;
  }

  get _sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Initialize2Call__Outputs {
  _call: Initialize2Call;

  constructor(call: Initialize2Call) {
    this._call = call;
  }
}

export class ExecuteOrder1Call extends ethereum.Call {
  get inputs(): ExecuteOrder1Call__Inputs {
    return new ExecuteOrder1Call__Inputs(this);
  }

  get outputs(): ExecuteOrder1Call__Outputs {
    return new ExecuteOrder1Call__Outputs(this);
  }
}

export class ExecuteOrder1Call__Inputs {
  _call: ExecuteOrder1Call;

  constructor(call: ExecuteOrder1Call) {
    this._call = call;
  }

  get assetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ExecuteOrder1Call__Outputs {
  _call: ExecuteOrder1Call;

  constructor(call: ExecuteOrder1Call) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
